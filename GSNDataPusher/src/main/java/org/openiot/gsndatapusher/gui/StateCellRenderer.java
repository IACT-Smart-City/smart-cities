package org.openiot.gsndatapusher.gui;

import java.awt.Component;
import javax.swing.JTable;
import javax.swing.table.TableCellRenderer;
import org.openiot.gsndatapusher.core.SensorStatus;

/**
 *
 * @author scf
 */
public class StateCellRenderer extends javax.swing.JPanel implements TableCellRenderer {

	/**
	 * Creates new form StateCellRenderer2
	 */
	public StateCellRenderer() {
		initComponents();
	}

	@Override
	public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		SensorStatus status = (SensorStatus) value;
		if (status != null) {
			lblStatus.setText(status.getMessage());
			lblQueue.setText(Integer.toString(status.getQueue()));
			pnlState.setBackground(status.getState().toColor());
		}
		return this;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblStatus = new javax.swing.JLabel();
        lblQueue = new javax.swing.JLabel();
        pnlState = new javax.swing.JPanel();

        setLayout(new java.awt.GridBagLayout());

        lblStatus.setText("jLabel1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.01;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);
        add(lblStatus, gridBagConstraints);

        lblQueue.setText("1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);
        add(lblQueue, gridBagConstraints);

        pnlState.setPreferredSize(new java.awt.Dimension(20, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        add(pnlState, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblQueue;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JPanel pnlState;
    // End of variables declaration//GEN-END:variables
}
