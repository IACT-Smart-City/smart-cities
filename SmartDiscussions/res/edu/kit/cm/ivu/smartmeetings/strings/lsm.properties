lsm_endpoint_addr = http://merk.iosb.fraunhofer.de:8080/openrdf-sesame/repositories/LSM_OWLIM
lsm_datagraph = http://lsm.deri.ie/OpenIoT/SmartMeetings/sensordata#
lsm_metagraph = http://lsm.deri.ie/OpenIoT/SmartMeetings/sensormeta#
resource_namespace = http://lsm.deri.ie/resource/
lsm_username = smartmeetings
lsm_password = smtpass


prefixes = PREFIX lsm: <http://lsm.deri.ie/ont/lsm.owl#> \
	PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \
	PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \
	PREFIX ssn: <http://purl.oclc.org/NET/ssnx/ssn#> \
	PREFIX dul: <http://www.loa-cnr.it/ontologies/DUL.owl#> \
	PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> \
	PREFIX smo: <http://lsm.deri.ie/OpenIoT/SmartMeetings/ont#> 
	
search_rooms =	SELECT DISTINCT ?room ?label ?roomNumber ?numberOfSeats ?floorSpace ?building \
				WHERE { \
					?room 	rdf:type smo:Room ; \
							rdfs:label ?label ; \
							smo:roomNumber ?roomNumber ; \
							smo:inBuilding ?building . \
					OPTIONAL {?room smo:numberOfSeats ?numberOfSeats} . \
					OPTIONAL {?room smo:floorSpace ?floorSpace} . \
					%s \
				} ORDER BY ?label ?roomNumber

search_buildings = SELECT DISTINCT ?building ?label ?buildingNumber ?street ?zipCode \
							?city ?latitude ?longitude ?areaName ?buildYear \
					WHERE { \
						?building 	rdf:type smo:Building ; \
									rdfs:label ?label ; \
									smo:buildingNumber ?buildingNumber ; \
									lsm:hasStreet ?street ; \
									lsm:hasZipcode ?zipCode ; \
									lsm:hasCity ?city ; \
									smo:inCampusArea ?campusArea . \
						?campusArea rdfs:label ?areaName . \
						OPTIONAL { ?building geo:latitude ?latitude ; \
											geo:longitude ?longitude } \
						OPTIONAL { ?building smo:buildYear ?buildYear } \
						%s \
					} ORDER BY ?buildingNumber

property_class_filter = ?room ssn:hasProperty ?property%d . \
						?property%d rdf:type <%s> .
property_detail_filter = ?room ssn:hasProperty <%s> .
room_id_filter = FILTER(?room = <%s>) .
building_id_filter = FILTER(?building = <%s>) .
				
get_room_properties =	SELECT DISTINCT ?propertyClass ?propertyName \
						WHERE { \
							<%s> ssn:hasProperty ?property . \
							?property 	rdf:type ?propertyClass . \
							?propertyClass rdfs:label ?propertyName . \
							FILTER (?propertyClass != smo:RoomProperty && ?propertyClass != ssn:Property) . \
						} ORDER BY ?propertyName
						
get_room_properties_detail = SELECT DISTINCT ?propertyClass ?propertyName \
							WHERE { \
								<%s> ssn:hasProperty ?propertyClass . \
								?propertyClass 	rdf:type <%s> ; \
												rdfs:label ?propertyName . \
							} ORDER BY ?propertyName
get_all_properties =	SELECT DISTINCT ?propertyClass ?propertyName \
						WHERE { \
							?propertyClass 	rdfs:subClassOf smo:RoomProperty ; \
											rdfs:label ?propertyName . \
							FILTER(?propertyClass != smo:RoomProperty) . \
						} ORDER BY ?propertyName
						
get_all_property_details =	SELECT DISTINCT ?propertyClass ?propertyName \
							WHERE { \
								?propertyClass 	rdf:type <%s> ; \
												rdfs:label ?propertyName . \
							} ORDER BY ?propertyName
							
get_reservation_by_id =	SELECT ?room ?startDate ?endDate ?timestamp ?user ?loginStatus \
						WHERE { \
									<%1$s> 		ssn:featureOfInterest ?room ; \
												ssn:observationResultTime ?timestamp . \
									?startProp 	lsm:isObservedPropertyOf <%1$s> ; \
												rdfs:label "startDate" ; \
												lsm:value ?startDate . \
									?endProp 	lsm:isObservedPropertyOf <%1$s> ; \
												rdfs:label "endDate" ; \
												lsm:value ?endDate . \
									?userProp 	lsm:isObservedPropertyOf <%1$s> ; \
												rdfs:label "user" ; \
												lsm:value ?user . \
									OPTIONAL { \
										<%1$s> smo:loginStatus ?loginStatus . \
									} \
						}
get_all_reservations_from_user = SELECT ?reservation ?room ?startDate ?endDate ?timestamp ?loginStatus \
								WHERE { \
									?resSensor lsm:hasSensorType smo:ReservationSensor . \
									?reservation ssn:observedBy ?resSensor ; \
												 ssn:featureOfInterest ?room ; \
												 ssn:observationResultTime ?timestamp . \
									?startProp 	lsm:isObservedPropertyOf ?reservation ; \
												rdfs:label "startDate" ; \
												lsm:value ?startDate . \
									?endProp 	lsm:isObservedPropertyOf ?reservation ; \
												rdfs:label "endDate" ; \
												lsm:value ?endDate . \
									?userProp 	lsm:isObservedPropertyOf ?reservation ; \
												rdfs:label "user" ; \
												lsm:value "%s" . \
									OPTIONAL { \
										?reservation smo:loginStatus ?loginStatus . \
									} \
								} ORDER BY ?startDate
get_all_reservations_of_room = SELECT ?reservation ?startTime ?endTime ?timestamp ?user ?loginStatus \
								WHERE { \
									?resSensor lsm:hasSensorType smo:ReservationSensor . \
									?reservation ssn:observedBy ?resSensor ; \
												 ssn:featureOfInterest <%s> ; \
												 ssn:observationResultTime ?timestamp . \
									?startProp 	lsm:isObservedPropertyOf ?reservation ; \
												rdfs:label "startTime" ; \
												lsm:value ?startTime . \
									?endProp 	lsm:isObservedPropertyOf ?reservation ; \
												rdfs:label "endTime" ; \
												lsm:value ?endTime . \
									?loginProp 	lsm:isObservedPropertyOf ?reservation ; \
												rdfs:label "loginStatus" ; \
												lsm:value ?loginStatus . \
									?userProp 	lsm:isObservedPropertyOf ?reservation ; \
												rdfs:label "user" ; \
												lsm:value ?user . \
									OPTIONAL { \
										?reservation smo:loginStatus ?loginStatus . \
									} \
								}
check_sensor_existence = ASK { \
							<%s> ?p ?o . \
							}
get_sensors_of_room = SELECT DISTINCT ?sensor ?sensorName \
						WHERE { \
							?sensor rdf:type ssn:Sensor . \
							?sensor rdfs:label ?sensorName . \
							FILTER(NOT EXISTS { ?sensor rdf:type smo:ReservationSensor }) \
							FILTER(EXISTS {	?obs ssn:observedBy ?sensor . \
											?obs ssn:featureOfInterest <%s> }) \
							}
								
get_sensor_data_of_room = SELECT ?time ?propertyName ?value ?unit \
							WHERE { \
								{ \
									SELECT ?obs ?time \
									WHERE { \
										?obs ssn:observedBy <%s> . \
										?obs ssn:featureOfInterest <%s> . \
										?obs ssn:observationResultTime ?time . \
									} ORDER BY DESC (?time) LIMIT 1 \
								} \
								?property 	lsm:isObservedPropertyOf ?obs; \
											rdfs:label ?propertyName; \
											lsm:value ?value . \
								OPTIONAL {?property lsm:unit ?unit} . \
							}
								
login_triple = <%s> <http://lsm.deri.ie/OpenIoT/SmartMeetings/ont#loginStatus> "true" .

logoff_triple = <%s> <http://lsm.deri.ie/OpenIoT/SmartMeetings/ont#loginStatus> "false" .