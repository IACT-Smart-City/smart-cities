/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2013-08-07 19:00:49 UTC)
 * on 2013-08-13 at 18:32:26 UTC 
 * Modify at your own risk.
 */

package com.google.api.services.smartmeetings.model;

/**
 * Model definition for Building.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the . For a detailed explanation see:
 * <a href="http://code.google.com/p/google-http-java-client/wiki/JSON">http://code.google.com/p/google-http-java-client/wiki/JSON</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Building extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Address address;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String buildYear;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String buildingNumber;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String campusAreaName;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String label;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uri;

  /**
   * @return value or {@code null} for none
   */
  public Address getAddress() {
    return address;
  }

  /**
   * @param address address or {@code null} for none
   */
  public Building setAddress(Address address) {
    this.address = address;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getBuildYear() {
    return buildYear;
  }

  /**
   * @param buildYear buildYear or {@code null} for none
   */
  public Building setBuildYear(java.lang.String buildYear) {
    this.buildYear = buildYear;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getBuildingNumber() {
    return buildingNumber;
  }

  /**
   * @param buildingNumber buildingNumber or {@code null} for none
   */
  public Building setBuildingNumber(java.lang.String buildingNumber) {
    this.buildingNumber = buildingNumber;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getCampusAreaName() {
    return campusAreaName;
  }

  /**
   * @param campusAreaName campusAreaName or {@code null} for none
   */
  public Building setCampusAreaName(java.lang.String campusAreaName) {
    this.campusAreaName = campusAreaName;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getLabel() {
    return label;
  }

  /**
   * @param label label or {@code null} for none
   */
  public Building setLabel(java.lang.String label) {
    this.label = label;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getUri() {
    return uri;
  }

  /**
   * @param uri uri or {@code null} for none
   */
  public Building setUri(java.lang.String uri) {
    this.uri = uri;
    return this;
  }

  @Override
  public Building set(String fieldName, Object value) {
    return (Building) super.set(fieldName, value);
  }

  @Override
  public Building clone() {
    return (Building) super.clone();
  }

}
